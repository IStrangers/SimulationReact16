{
  "version": 3,
  "sources": ["../../packages/react/index.ts", "../../packages/shared/src/utils.ts", "../../packages/types/src/nodeType.ts", "../../packages/types/src/effectType.ts", "../../packages/react/src/updater.ts", "../../packages/react/src/scheduler.ts", "../../packages/react/src/component.ts"],
  "sourcesContent": ["import { isFunction, isObject } from \"../shared\"\r\nimport { TEXT } from \"../types\"\r\nimport { Component } from \"./src/component\"\r\nimport { useState,useReducer } from \"./src/scheduler\"\r\n\r\nfunction createElement(type : any,config : any,...children : Array<any>) {\r\n  return {\r\n    type,\r\n    props: {\r\n      ...config\r\n    },\r\n    children : children.map(child => {\r\n      if(isObject(child) || isFunction(child)) {\r\n        return child\r\n      }\r\n      return {\r\n        type: TEXT,\r\n        props: {\r\n        },\r\n        children: child\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  Component,\r\n  createElement,\r\n  useState,\r\n  useReducer,\r\n}", "function isObject(value : any) : boolean {\r\n  return typeof value === 'object'\r\n}\r\n\r\nfunction isNumber(value : any) : boolean {\r\n  return !isNaN(value) && typeof value === 'number'\r\n}\r\n\r\nfunction isString(value : any) : boolean {\r\n  return typeof value === 'string'\r\n}\r\n\r\nfunction isBoolean(value : any) : boolean {\r\n  return typeof value === 'boolean'\r\n}\r\n\r\nfunction isArray(value : any) : boolean {\r\n  return Array.isArray(value)\r\n}\r\n\r\nfunction isFunction(value : any) : boolean {\r\n  return typeof value === 'function'\r\n}\r\n\r\nfunction toUppercaseStart(value : string) : string {\r\n  if(value) {\r\n    value = value.replace(value[0],value[0].toUpperCase());\r\n  }\r\n  return value\r\n}\r\n\r\nfunction isUppercaseStart(value : string) : boolean {\r\n  if(value) {\r\n    const c = value.charAt(0)\r\n    if(c >= \"A\" && c <= \"Z\") {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction hasOwnProperty(value : any,key : any) : boolean {\r\n  return Object.prototype.hasOwnProperty.call(value,key)\r\n} \r\n\r\nfunction removeExtraSpaces(value : string) : string {\r\n  return value.replace(/[\\s]+/g,\"\")\r\n}\r\n\r\nfunction getLongestIncreasingSequence(arr : Array<number>) : Array<number> {\r\n  const len = arr.length\r\n  const result = [0]\r\n  const traceBack = new Array(len)\r\n  let startIndex\r\n  let endIndex\r\n  let middleIndex\r\n  let resultLastIndex;\r\n  for(let i = 0; i < len; i++) {\r\n    let item = arr[i]\r\n    if(item === 0) {\r\n      continue\r\n    }\r\n    resultLastIndex = result[result.length - 1]\r\n    if(arr[resultLastIndex] < item) {\r\n      result.push(i)\r\n      traceBack[i] = resultLastIndex\r\n      continue\r\n    }\r\n\r\n    startIndex = 0\r\n    endIndex = result.length - 1\r\n    while(startIndex < endIndex) {\r\n      middleIndex = ((startIndex + endIndex) / 2) | 0\r\n      if(arr[result[middleIndex]] < item) {\r\n        startIndex = middleIndex  + 1\r\n      } else {\r\n        endIndex = middleIndex\r\n      }\r\n    }\r\n\r\n    if(arr[result[endIndex]] > item) {\r\n      result[endIndex] = i\r\n      traceBack[i] = result[endIndex - 1]\r\n    }\r\n  }\r\n\r\n  let i = result.length\r\n  let last = result[i - 1]\r\n  while(i-- > 0) {\r\n    result[i] = last\r\n    last = traceBack[last]\r\n  }\r\n  return result\r\n}\r\n\r\nfunction invokeFunctions(funs : Array<Function>) {\r\n  for(let i = 0; i < funs.length; i++) {\r\n    const fun = funs[i]\r\n    fun()\r\n  }\r\n}\r\n\r\nfunction onlyOne(items : any) {\r\n  return isArray(items) ? items[0] : items\r\n}\r\n\r\nfunction flatten(array : Array<any>) {\r\n  const flatted : Array<any> = []\r\n  function flat(items : Array<any>) {\r\n    items.forEach(item => {\r\n      if(isArray(item)) {\r\n        flat(item)\r\n      } else {\r\n        flatted.push(item)\r\n      }\r\n    })\r\n  }\r\n  flat(array)\r\n  return flatted\r\n}\r\n\r\nexport {\r\n  isObject,\r\n  isNumber,\r\n  isString,\r\n  isBoolean,\r\n  isArray,\r\n  isFunction,\r\n  hasOwnProperty,\r\n  toUppercaseStart,\r\n  isUppercaseStart,\r\n  removeExtraSpaces,\r\n  getLongestIncreasingSequence,\r\n  invokeFunctions,\r\n  onlyOne,\r\n  flatten,\r\n}", "const TEXT = Symbol.for(\"TEXT\")\r\n\r\n\r\nconst TAG_ROOT = Symbol.for(\"TAG_ROOT\")\r\nconst TAG_ELEMENT = Symbol.for(\"TAG_ELEMENT\")\r\nconst TAG_TEXT = Symbol.for(\"TAG_TEXT\")\r\nconst TAG_COMMENT = Symbol.for(\"TAG_COMMENT\")\r\nconst TAG_CLASS_COMPONENT = Symbol.for(\"TAG_CLASS_COMPONENT\")\r\nconst TAG_FUNCTION_COMPONENT = Symbol.for(\"TAG_FUNCTION_COMPONENT\")\r\nexport {\r\n  TEXT,\r\n\r\n  TAG_ROOT,\r\n  TAG_ELEMENT,\r\n  TAG_TEXT,\r\n  TAG_COMMENT,\r\n  TAG_CLASS_COMPONENT,\r\n  TAG_FUNCTION_COMPONENT,\r\n}", "const PLACEMENT = Symbol.for(\"PLACEMENT\")\r\nconst UPDATE = Symbol.for(\"UPDATE\")\r\nconst DELETION = Symbol.for(\"DELETION\")\r\n\r\nexport {\r\n  PLACEMENT,\r\n  UPDATE,\r\n  DELETION,\r\n}", "import { isFunction } from \"../../shared\"\r\n\r\nclass Updater {\r\n\r\n  public nextUpdater : Updater | null = null\r\n\r\n  constructor(public payload : any) {\r\n\r\n  }\r\n  \r\n}\r\n\r\nclass UpdaterQueue {\r\n\r\n  public firstUpdater : Updater | null = null\r\n  public lastUpdater : Updater | null = null\r\n\r\n  enqueueUpdate(updater : Updater) {\r\n    if(this.lastUpdater === null) {\r\n      this.firstUpdater = this.lastUpdater = updater\r\n    } else {\r\n      this.lastUpdater.nextUpdater = updater\r\n      this.lastUpdater = updater\r\n    }\r\n  }\r\n\r\n  forceUpdate(state : any) {\r\n    let currentUpdater = this.firstUpdater\r\n    while(currentUpdater) {\r\n      const nextState = isFunction(currentUpdater.payload) ? currentUpdater.payload(state) : currentUpdater.payload\r\n      state = { ...state,...nextState}\r\n      currentUpdater = currentUpdater.nextUpdater\r\n    }\r\n    this.firstUpdater = this.lastUpdater = null\r\n    return state\r\n  }\r\n}\r\n\r\nexport {\r\n  Updater,\r\n  UpdaterQueue,\r\n}", "import { hasOwnProperty, isFunction, isString } from \"../../shared\"\r\nimport { DELETION, PLACEMENT, TAG_CLASS_COMPONENT, TAG_COMMENT, TAG_ELEMENT, TAG_FUNCTION_COMPONENT, TAG_ROOT, TAG_TEXT, TEXT, UPDATE } from \"../../types\"\r\nimport { Updater, UpdaterQueue } from \"./updater\"\r\n\r\nlet workInProgressRoot : any = null\r\nlet nextUnitOfWork : any = null\r\nlet currentRoot : any = null\r\nlet workInProgressFiber : any = null\r\nlet hookIndex : number = 0\r\nconst deletions : Array<any> = []\r\n\r\nfunction startWork() {\r\n  requestIdleCallback(workLoop,{ timeout: 500 })\r\n}\r\nstartWork()\r\n\r\nfunction workLoop(deadline : any) {\r\n  let shouldYield = false\r\n  while(nextUnitOfWork && !shouldYield) {\r\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork)\r\n    shouldYield = deadline.timeRemaining() < 1\r\n  }\r\n  if(!nextUnitOfWork && workInProgressRoot) {\r\n    commitRoot()\r\n  }\r\n  startWork()\r\n}\r\n\r\nfunction commitRoot() {\r\n  deletions.forEach(commitWork)\r\n  let currentFiber = workInProgressRoot.firstEffect\r\n  while(currentFiber) {\r\n    commitWork(currentFiber)\r\n    currentFiber = currentFiber.nextEffect\r\n  }\r\n  deletions.length = 0\r\n  currentRoot = workInProgressRoot\r\n  workInProgressRoot = null\r\n}\r\n\r\nfunction commitWork(currentFiber : any) {\r\n  if(!currentFiber) return\r\n  const  { \r\n    tag,effectTag,stateNode,\r\n    props,type,children,alternate \r\n  } = currentFiber\r\n  let parentFiber = currentFiber.parent\r\n  while(\r\n    parentFiber.tag !== TAG_ELEMENT && \r\n    parentFiber.tag !== TAG_ROOT &&\r\n    parentFiber.tag !== TAG_TEXT\r\n  ) {\r\n    parentFiber = parentFiber.parent\r\n  }\r\n  const parentNode = parentFiber.stateNode\r\n  if(effectTag === PLACEMENT) {\r\n    let nextFiber = currentFiber\r\n    while(nextFiber.tag !== TAG_ELEMENT && nextFiber.tag !== TAG_TEXT) {\r\n      nextFiber = currentFiber.child\r\n    }\r\n    parentNode.appendChild(nextFiber.stateNode)\r\n  } else if(effectTag === DELETION) {\r\n    commitDeletion(currentFiber,parentNode)\r\n  } else if(effectTag === UPDATE) {\r\n    if(type === TEXT && children !== alternate.children) {\r\n      stateNode.textContent = children\r\n    } else if(tag !== TAG_CLASS_COMPONENT && tag !== TAG_FUNCTION_COMPONENT) {\r\n      updateDOM(stateNode,alternate.props,props)\r\n    }\r\n  }\r\n  currentFiber.effectTag = null\r\n}\r\n\r\nfunction commitDeletion(currentFiber : any,parentNode : Node) {\r\n  if(currentFiber.tag === TAG_ELEMENT && currentFiber.tag === TAG_TEXT) {\r\n    parentNode.removeChild(currentFiber.stateNode)\r\n  } else {\r\n    commitDeletion(currentFiber.child,parentNode)\r\n  }\r\n}\r\n\r\nfunction performUnitOfWork(currentFiber : any) {\r\n  beginWork(currentFiber)\r\n  if(currentFiber.child) {\r\n    return currentFiber.child\r\n  }\r\n  while(currentFiber) {\r\n    completeUnitOfWork(currentFiber)\r\n    if(currentFiber.sibling) {\r\n      return currentFiber.sibling\r\n    }\r\n    currentFiber = currentFiber.parent\r\n  }\r\n}\r\n\r\nfunction completeUnitOfWork(currentFiber : any) {\r\n  const { parent: parentFiber,effectTag } = currentFiber\r\n  if(parentFiber) {\r\n    if(!parentFiber.firstEffect) {\r\n      parentFiber.firstEffect = currentFiber.firstEffect\r\n    }\r\n    if(currentFiber.lastEffect) {\r\n      if(parentFiber.lastEffect) {\r\n        parentFiber.lastEffect.nextEffect = currentFiber.firstEffect\r\n      }\r\n      parentFiber.lastEffect = currentFiber.lastEffect\r\n    }\r\n    if(effectTag) {\r\n      if(parentFiber.lastEffect) {\r\n        parentFiber.lastEffect.nextEffect = currentFiber\r\n      } else {\r\n        parentFiber.firstEffect = currentFiber\r\n      }\r\n      parentFiber.lastEffect = currentFiber\r\n    }\r\n  }\r\n}\r\n\r\nfunction beginWork(currentFiber : any) {\r\n  const { tag } = currentFiber\r\n  if(tag === TAG_ROOT) {\r\n    updateHostRoot(currentFiber)\r\n  } else if(tag === TAG_TEXT) {\r\n    updateHostText(currentFiber)\r\n  } else if(tag === TAG_ELEMENT) {\r\n    updateHostElement(currentFiber)\r\n  } else if(tag === TAG_CLASS_COMPONENT) {\r\n    updateClassComponent(currentFiber)\r\n  } else if(tag === TAG_FUNCTION_COMPONENT) {\r\n    updateFunctionComponent(currentFiber)\r\n  }\r\n}\r\n\r\nfunction updateFunctionComponent(currentFiber : any) {\r\n  workInProgressFiber = currentFiber\r\n  hookIndex = 0\r\n  workInProgressFiber.hooks = []\r\n  const newChildren = currentFiber.type(currentFiber.props)\r\n  reconcileChildren(currentFiber,newChildren)\r\n}\r\n\r\nfunction updateClassComponent(currentFiber : any) {\r\n  if(!currentFiber.stateNode) {\r\n    currentFiber.stateNode = new currentFiber.type(currentFiber.props)\r\n    currentFiber.stateNode.internalFiber = currentFiber\r\n    currentFiber.updaterQueue = currentFiber.stateNode.updaterQueue\r\n  }\r\n  currentFiber.stateNode.state = currentFiber.updaterQueue.forceUpdate(currentFiber.stateNode.state)\r\n  const newElement = currentFiber.stateNode.render()\r\n  const newChildren = [ newElement ]\r\n  reconcileChildren(currentFiber,newChildren)\r\n}\r\n\r\nfunction updateHostElement(currentFiber : any) {\r\n  if(!currentFiber.stateNode) {\r\n    currentFiber.stateNode = createDOM(currentFiber)\r\n  } \r\n  const children = currentFiber.children\r\n  reconcileChildren(currentFiber,children)\r\n}\r\n\r\nfunction updateHostText(currentFiber : any) {\r\n  if(!currentFiber.stateNode) {\r\n    currentFiber.stateNode = createDOM(currentFiber)\r\n  }\r\n}\r\n\r\nfunction updateHostRoot(currentFiber : any) {\r\n  const children = currentFiber.children\r\n  reconcileChildren(currentFiber,children)\r\n}\r\n\r\nfunction reconcileChildren(currentFiber : any,children : Array<any>) {\r\n  let childrenIndex = 0\r\n  let oldFiber = currentFiber.alternate && currentFiber.alternate.child\r\n  if(oldFiber) {\r\n    oldFiber.firstEffect = oldFiber.lastEffect = oldFiber.nextEffect = null\r\n  }\r\n  let prevSibling : any\r\n  while(childrenIndex < children.length || oldFiber) {\r\n    const newChild = children[childrenIndex++]\r\n    const sameType = oldFiber && newChild && oldFiber.type === newChild.type\r\n\r\n    let newFiber\r\n    if(sameType) {\r\n      if(oldFiber.alternate) {\r\n        newFiber = oldFiber.alternate\r\n        newFiber.props = newChild.props\r\n        newFiber.children = newChild.children\r\n        newFiber.alternate = oldFiber\r\n        newFiber.effectTag = UPDATE\r\n        newFiber.updaterQueue = oldFiber.updaterQueue || new UpdaterQueue()\r\n        newFiber.nextEffect = null\r\n      } else {\r\n        newFiber = {\r\n          tag: oldFiber.tag,\r\n          type: oldFiber.type,\r\n          props: newChild.props,\r\n          children: newChild.children,\r\n          stateNode: oldFiber.stateNode,\r\n          parent: currentFiber,\r\n          updaterQueue: oldFiber.updaterQueue || new UpdaterQueue(),\r\n          alternate: oldFiber,\r\n          effectTag: UPDATE,\r\n          nextEffect: null\r\n        }\r\n      }\r\n    } else {\r\n      if(newChild){\r\n        let tag : Symbol\r\n        if(newChild && isFunction(newChild.type)) {\r\n          tag = newChild.type.prototype.isReactComponent ? TAG_CLASS_COMPONENT : TAG_FUNCTION_COMPONENT\r\n        } else if(newChild.type === TEXT) {\r\n          tag = TAG_TEXT\r\n        } else if(isString(newChild.type)) {\r\n          tag = TAG_ELEMENT\r\n        } else {\r\n          tag = TAG_COMMENT\r\n        }\r\n        newFiber = {\r\n          tag,\r\n          type: newChild.type,\r\n          props: newChild.props,\r\n          children: newChild.children,\r\n          stateNode: null,\r\n          parent: currentFiber,\r\n          effectTag: PLACEMENT,\r\n          updaterQueue: new UpdaterQueue(),\r\n          nextEffect: null\r\n        }\r\n      } \r\n      if(oldFiber){\r\n        oldFiber.effectTag = DELETION\r\n        deletions.push(oldFiber)\r\n      }\r\n    }\r\n\r\n    if(oldFiber) {\r\n      oldFiber = oldFiber.sibling\r\n    }\r\n\r\n    if(newFiber) {\r\n      if(childrenIndex === 1) {\r\n        currentFiber.child = newFiber\r\n      } else {\r\n        prevSibling.sibling = newFiber\r\n      }\r\n      prevSibling = newFiber\r\n    }\r\n  }\r\n}\r\n\r\nfunction createDOM(currentFiber : any) {\r\n  const { tag } = currentFiber\r\n  if(tag === TAG_TEXT) {\r\n    return document.createTextNode(currentFiber.children)\r\n  } else if(tag == TAG_ELEMENT) {\r\n    const dom = document.createElement(currentFiber.type)\r\n    updateDOM(dom,{},currentFiber.props)\r\n    return dom\r\n  }\r\n}\r\n\r\nfunction updateDOM(dom : HTMLElement,oldProps : any,newProps : any) {\r\n  setProps(dom,oldProps,newProps)\r\n}\r\n\r\nfunction setProps(dom : HTMLElement,oldProps : any,newProps : any) {\r\n  for(let key in oldProps) {\r\n    if(hasOwnProperty(newProps,key)) {\r\n      dom.removeAttribute(key)\r\n    }\r\n  }\r\n  for(let key in newProps) {\r\n    setProp(dom,key,newProps[key])\r\n  }\r\n}\r\n\r\nfunction setProp(dom : HTMLElement,key : string,value : any) {\r\n  if(/^on/.test(key)) {\r\n    dom[key.toLowerCase()] = value\r\n  } else if(key === \"className\") {\r\n    dom.className = value\r\n  } else if(key === \"style\") {\r\n    for(let styleName in value) {\r\n      dom.style[styleName] = value[styleName]\r\n    }\r\n  } else {\r\n    dom.setAttribute(key,value)\r\n  }\r\n}\r\n\r\nfunction scheduleRoot(rootFiber? : any) {\r\n  if(currentRoot && currentRoot.alternate) {\r\n    workInProgressRoot = currentRoot.alternate\r\n    workInProgressRoot.alternate = currentRoot\r\n    if(rootFiber) {\r\n      workInProgressRoot.props = rootFiber.props\r\n      workInProgressRoot.children = rootFiber.children\r\n    }\r\n  } else if(currentRoot) {\r\n    if(rootFiber) {\r\n      rootFiber.alternate = currentRoot\r\n      workInProgressRoot = rootFiber\r\n    } else {\r\n      workInProgressRoot = {\r\n        ...currentRoot,\r\n        alternate: currentRoot\r\n      }\r\n    }\r\n  } else {\r\n    workInProgressRoot = rootFiber\r\n  }\r\n  workInProgressRoot.firstEffect = workInProgressRoot.lastEffect = workInProgressRoot.nextEffect = null\r\n  nextUnitOfWork = workInProgressRoot\r\n}\r\n\r\nfunction useReducer(reducer : any,initialValue : any) {\r\n  let hook = workInProgressFiber.alternate &&\r\n             workInProgressFiber.alternate.hooks &&\r\n             workInProgressFiber.alternate.hooks[hookIndex]\r\n  if(hook) {\r\n    hook.state = hook.updaterQueue.forceUpdate(hook.state)\r\n  } else {\r\n    hook = {\r\n      state: initialValue,\r\n      updaterQueue: new UpdaterQueue()\r\n    }\r\n  }\r\n  const dispatch = (action : any) => {\r\n    const payload = reducer ? reducer(hook.state,action) : action\r\n    hook.updaterQueue.enqueueUpdate(\r\n      new Updater(payload)\r\n    )\r\n    scheduleRoot()\r\n  }\r\n  workInProgressFiber.hooks[hookIndex++] = hook\r\n  return [ hook.state,dispatch ]\r\n}\r\n\r\nfunction useState(initialValue : any) {\r\n  return useReducer(null,initialValue)\r\n}\r\n\r\nexport {\r\n  scheduleRoot,\r\n  useReducer,\r\n  useState,\r\n}", "import { scheduleRoot } from \"./scheduler\"\r\nimport { Updater, UpdaterQueue } from \"./updater\"\r\n\r\nclass Component {\r\n\r\n  public updaterQueue\r\n\r\n  constructor(public props : any) {\r\n    this.updaterQueue = new UpdaterQueue()\r\n  }\r\n\r\n  setState(playload : any) {\r\n    const updater = new Updater(playload)\r\n    this.updaterQueue.enqueueUpdate(updater)\r\n    scheduleRoot()\r\n  }\r\n}\r\n\r\nComponent.prototype[\"isReactComponent\"] = true\r\n\r\nexport {\r\n  Component\r\n}"],
  "mappings": "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",
  "names": []
}
